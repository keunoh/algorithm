import java.util.Scanner;

public class Back2563 {
    /**
     * 1. 문제를 읽고 이해한다.
     * 2. 문제를 익숙한 용어로 재정의한다.
     * 3. 어떻게 해결할지 계획을 세운다.
     * 4. 계획을 검증한다.
     * 5. 프로그램으로 구현한다.
     * 6. 어떻게 풀었는지 돌아보고, 개선할 방법이 있는지 찾아본다.
     * @param args
     */
    public static void main(String[] args) {
        //Q. 가로,세로 크기 각각 100인 정사각형
        // 가로, 세로 크기 각각 10인 정사각형 색종이를 평행하도록 붙임
        // 색종이를 한 장 여러 장 붙인 후 검은 영역 넓이 구하기
        // 겹치는 부분은 제외해야함

        // 첫째 줄에 색종이 수 주어짐
        // 둘째 줄부터 색종이 위치가 공백으로 주어짐
        // 왼쪽 자연수는 왼쪽변과 도화지의 왼쪽 변 사이의 거리
        // 오른쪽 자연수는 아래쪽변과 도화지 아래쪽 변사이의 거리
        // 색종이가 바깥으로 나가는 경우는 없음

        //우선 해당 위치부터 정사각형을 배치하는 것부터 생각하자
        //배치를 생각할 필요가 있을까? 결국 종이 갯수에 따라서 겹치는걸 포함하면
        //총 합계가 나오고 그 후에 겹치는 부분을 제거해주면 되지 않을까?
        //그 후에 겹치는 부분은 어떻게 처리해야할지 생각

        //직사각형의 넓이는 가로 X 세로
        //일단 두 개의 좌표만 알면 넓이를 구할 수 있다.
        //S1 : x1(3, 7),  x3(13, 17)
        //S2 : x1(5, 2),  x3(15, 12)
        //어떻게 겹친다는 것을 알 수 있을까?
        //어떻게 아래 두개의 좌표를 구할 수 있을까?
        //S1의 범위 3 ~ 13, 7 ~ 17
        //S2의 범위 5 ~ 15, 2 ~ 12
        //X3의 범위 5 ~ 13, 7 ~ 12
        //R(s2 ~ s1) (s1 ~ s2)
// X3(겹치는  : x1(5, 7),  x3(13, 12)

        //S3 : x1(15, 7), x2(25, 7), x3(25, 17), x4(15, 17)

        //다른 사람 풀이를 참고했는데 사각형 1 * 1의 갯수를 구하는 방식으로 했네
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[][] arr = new int[100][100];

        int count = 0;
        for (int i = 0; i < N; i++) {
            int X = scanner.nextInt();
            int Y = scanner.nextInt();

            for (int j = X; j < X + 10; j++) {
                for (int k = Y; k < Y + 10; k++) {
                    arr[j][k] = 1;
                }
            }
        }

        for (int i = 0; i < 100; i++) {
            for (int j = 0; j < 100; j++) {
                if (arr[i][j] == 1)
                    count++;
            }
        }
        System.out.println(count);
    }
}
